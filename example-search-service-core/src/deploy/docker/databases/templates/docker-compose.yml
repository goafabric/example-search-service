version: '3.7'
services:
  elasticsearch-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: ${_Values_root_name}-elasticsearch
    restart: 'no'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esconfig:/usr/share/elasticsearch/config
      - eslogs:/usr/share/elasticsearch/logs
    tmpfs:
      - /tmp:exec,mode=1777
    healthcheck:
      test: ["CMD", "curl", "--fail", "--noproxy", "localhost", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - 9200:9200
    networks:
      - ${_Values_root_name}-net
    environment:
      - TZ=Europe/Berlin
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node

  mongodb:
    image: mongo:4.4.5
    container_name: ${_Values_root_name}-mongodb
    restart: 'no'
    ports:
      - 27017:27017
    volumes:
      - mongoconfig:/data/configdb
      - mongodata:/data/db
    networks:
      - ${_Values_root_name}-net
    environment:
      - TZ=Europe/Berlin
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=mongodb
    deploy:
      resources:
        limits:
          memory: 64M

  postgres:
    container_name: ${_Values_root_name}-postgres
    image: postgres:14.1
    restart: 'no'
    ports:
      - 5432:5432
    command: postgres -c 'shared_buffers=128MB' -c 'max_connections=30' -c 'shared_preload_libraries=pg_stat_statements'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ${_Values_root_name}-net
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=search

volumes:
  tmp:
  applogs:
  esdata:
    driver: local
  esconfig:
    driver: local
  eslogs:
    driver: local

  mongoconfig:
    driver: local
  mongodata:
    driver: local

  pgdata:
    driver: local

networks:
  example-search-database-net:
    driver: bridge
