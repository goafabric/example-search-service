version: '3.7'
services:
  example-search-service:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_server_arch}:${_Values_image_tag}
    #    image: ${_Values_image_repository}-native:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    entrypoint: ["java","-Xms${_Values_resources_requests_memory}","-Xmx${_Values_resources_requests_memory}","-cp","/app/resources:/app/classes:/app/libs/*","org.goafabric.example.searchservice.Application"]
    #    command: ["-Xmx${_Values_resources_requests_memory}"]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net

    environment:
      - TZ=Europe/Berlin
      - elasticsearch.url=${_Values_root_name}-elasticsearch:9200
      - database.provisioning.goals=-import-demo-data
    depends_on:
      elasticsearch-search:
        condition: service_healthy

  elasticsearch-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: ${_Values_root_name}-elasticsearch
    restart: always
    read_only: true
    environment:
      - TZ=Europe/Berlin
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esconfig:/usr/share/elasticsearch/config
      - eslogs:/usr/share/elasticsearch/logs
    tmpfs:
      - /tmp:exec,mode=1777
    healthcheck:
      test: ["CMD", "curl", "--fail", "--noproxy", "localhost", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - 9200:9200
    networks:
      - ${_Values_root_name}-net

volumes:
  tmp:
  applogs:
  esdata:
    driver: local
  esconfig:
    driver: local
  eslogs:
    driver: local

networks:
  example-search-service-net:
    driver: bridge
