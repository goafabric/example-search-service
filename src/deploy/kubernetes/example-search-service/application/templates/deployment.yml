apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${_Values_app_name}
spec:
  selector:
    matchLabels:
      app: ${_Values_app_name}
  replicas: 1
  strategy:
    type: Recreate #RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "true"
      labels:
        app: ${_Values_app_name}
    spec:
#      initContainers:
#        - name: wait-for-dependent-service
#          image: stefanevinance/wait-for-200
#          env:
#            - name: URL
##              value: http://elasticsearch.example:9200/_cat/health
#              value: http://elasticsearch.example:9200
      initContainers:
        - name: wait-for-webserver
          image: curlimages/curl:7.75.0
          command: ["/bin/sh","-c"]
          args: ["while [ \$(curl -sw '%{http_code}' http://elasticsearch.example:9200/_cat/health -o /dev/null) -ne 200 ]; do sleep 2; done"]
  # "https://varlogdiego.com/kubernetes-wait-until-another-pod-is-ready"
  #      imagePullSecrets:
  #        - name: ${_Values_image_pullSecrets}
      containers:
        - name: ${_Values_app_name}
          image: "${_Values_image_repository}${_Values_server_arch}:${_Values_image_tag}"
          imagePullPolicy: IfNotPresent #Always
          ports:
            - name: transport
              containerPort: ${_Values_service_port}
              protocol: TCP
            - name: jmx
              containerPort: 1099
              protocol: TCP
          envFrom:
            - configMapRef:
                name: ${_Values_app_name}-config
            - configMapRef:
                name: ${_Values_app_name}-config-log
            - secretRef:
                name: ${_Values_app_name}-config-external

          command: ["java", "-Xms${_Values_resources_requests_memory}", "-Xmx${_Values_resources_requests_memory}", "-Djava.security.egd=file:/dev/./urandom",
                    ${_Values_profiler_command}
                    "-cp", "/app/resources:/app/classes:/app/libs/*",
                    "${_Values_command}"]
          resources:
            requests:
              memory: "${_Values_resources_requests_memory}"
              cpu: "${_Values_resources_requests_cpu}"

          readinessProbe:
            httpGet:
              path: /actuator/health
              port: transport
            initialDelaySeconds: ${_Values_readinessProbe_initialDelaySeconds}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: transport
            initialDelaySeconds: ${_Values_readinessProbe_initialDelaySeconds}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

          volumeMounts:
            - mountPath: /usr/share/logs
              name: ${_Values_app_name}-applogs
            - mountPath: /usr/share/profiler
              name: ${_Values_app_name}-profiler-volume

      volumes:
        - name: ${_Values_app_name}-applogs
          emptyDir: {}
        - name: ${_Values_app_name}-profiler-volume
          ${_Values_volume_type_profiler}
          ${_Values_volume_path_profiler}